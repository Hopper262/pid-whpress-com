#!perl
use strict;
use warnings 'FATAL' => 'all';
use CGI ();
use Carp ();
use HTML::Entities ();

our ($FILEROOT, $HOME_URL, $ARCHIVE_URL, $MAP_URL);

# Optional email notifications
our $DEVMODE = 1; # change to 0 to enable emails
our $FROM_ADDRESS = 'me@example.com';
our $TO_ADDRESS = 'me@example.com';
# uncomment the following (requires Email::MIME, Email::Sender)
# require "$FILEROOT/modules/My/Mail.pm";

sub my_die {
  PageError($_[0]);
}
$SIG{__DIE__} = \&my_die;


our ($ROOT, $STYLE);
our ($CG);

sub CGObject
{
  $CG = CGI->new() unless $CG;
  return $CG;
}

sub PageError
{
  my ($err, $sql) = @_;
  my (@messages, $title, $body);
  
  push(@messages, 'Error message', $err);
  push(@messages, 'SQL in use', $sql);
  push(@messages, 'Stack trace', Carp::longmess("PageError"));
  
  if ($DEVMODE)
  {
    $body .= '<dl class="error">';
    while (@messages)
    {
      my $key = shift @messages;
      my $val = shift @messages;
      next unless $key && $val;
      $val = HTML::Entities::encode($val);
      $val =~ s/^(\s+)/'&nbsp;' x length($1)/gem;
      $val =~ s/\n/<br \/>/sg;
      $body .= <<END;
<dt>$key:</dt>
<dd>$val</dd>
END
    }
    $body .= '</dl>';
  }
  else
  {
    my $msg = '';
    while (@messages)
    {
      my $key = shift @messages;
      my $val = shift @messages;
      next unless $key && $val;
      $msg .= "$key:\n$val\n\n";
    }
    
    eval {
      My::Mail::mail('from' => $FROM_ADDRESS,
                     'subject' => 'Pathways error',
                     'to' => $TO_ADDRESS,
                     'msg' => $msg);
    };
  }
    
  
  UserError('Seven men in overcoats jump from the shadows and carry you away.  You are never heard from again.', $body);
} # end PageError

sub UserError
{
  my ($msg, $extended) = @_;
  $msg = 'Something went terribly awry.' unless $msg;
  $msg = HTML::Entities::encode($msg);
  $extended = '' unless $extended;
  
  my %opts = (
    'Title' => 'Server Error',
    'PreHead' => '<p class="tagline">Errors. They&rsquo;re everywhere. Can&rsquo;t stand &rsquo;em.</p>',
    );
  DoPage(\%opts, <<END);
<p>
$msg
</p>

$extended
END
  exit;
}

sub URI {
  my ($scr, @args) = @_;
  
  my $url = $scr;
  unless ($scr =~ /^\w+\:/)
  {
    $scr = "$ROOT/$scr" unless $scr =~ m|^/|;
    $url = 'http://' . $ENV{'HTTP_HOST'} . $scr;
  }
  if (scalar @args)
  {
    $url .= '?' . join('&amp;', @args);
  }
  return $url;
} # end URI

sub Header {
  my (@lines) = @_;
  
  if (scalar @lines == 1)
  {
    @lines = split(/\n/, $lines[0]);
  }
  push(@lines, 'Content-Type: text/html; charset=utf-8');
  
  return join("\015\012", @lines) . "\015\012\015\012";
} # end Header

sub Redirect {
  print Header('Status: 302 Found', 'Location: ' . URI(@_));
  exit;
}
sub NotFound {
  print Header('Status: 404 Not Found') .
        PageHeader({ 'Title' => '404 Not Found' }) .
        <<END . PageFooter();
<p>
If it used to be here, it's not here now. I think Muller took it.
</p>

<p>
<a href="$HOME_URL">Return to the home page</a>
</p>
END
  exit;
}

sub DoPage
{
  my ($opts, $body) = @_;
  
  print Header() .
        PageHeader($opts) .
        ($body || '<p>Hmm...</p>') .
        PageFooter($opts);
  exit;
} # end DoPage

sub PageHeader
{
  my ($opts) = @_;
 
  my $any = sub { my $r = $_[0]; return (ref $r ? @$r : $r); };
  
  my $pgtitle = $opts->{'Head'} || $opts->{'Title'} || 'The Brown Crystal';
  
  my $html = <<END;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
                      "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>

<!--
  -- THIS SITE OFFICIALLY DEDICATED TO \$lave --
  --      a cool guy who'd never ban me      --
  -->

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
END
  for my $css_url (
    "$STYLE/psi.css",
    $any->($opts->{'CSS_Url'}) )
  {
    $html .= <<END if $css_url;
<link rel="stylesheet" type="text/css" href="$css_url">
END
  }
  for my $css_url (
    "$STYLE/fancybox/jquery.fancybox-1.3.4.css",
    $any->($opts->{'CSS_Screen_Url'}) )
  {
    $html .= <<END if $css_url;
<link rel="stylesheet" type="text/css" media="screen" href="$css_url">
END
  }
  for my $css_url (
    $any->($opts->{'CSS_Print_Url'}) )
  {
    $html .= <<END if $css_url;
<link rel="stylesheet" type="text/css" media="print" href="$css_url">
END
  }
  for my $css (
    $any->($opts->{'CSS'}) )
  {
    $html .= <<END if $css;
<style type="text/css">
$css
</style>
END
  }
  for my $js_url (
    "$STYLE/jquery-1.7.1.min.js",
    "$STYLE/fancybox/jquery.fancybox-1.3.4.pack.js",
    "$STYLE/psi.js",
    $any->($opts->{'JS_Url'}) )
  {
    $html .= <<END if $js_url;
<script type="text/javascript" src="$js_url"></script>
END
  }
  for my $js (
    $any->($opts->{'JS'}) )
  {
    $html .= <<END if $js;
<script type="text/javascript">
$js
</script>
END
  }
  for my $extra (
    "<title>$pgtitle</title>\n",
    $any->($opts->{'HeadExtra'}) )
  {
    $html .= $extra if $extra;
  }
  $html .= <<END;
</head>
<body>
<div id="head">
END

  $html .= $opts->{'PreHead'} if $opts->{'PreHead'};
  $html .= '<h1>' . $opts->{'Title'} . '</h1>' if $opts->{'Title'};
  $html .= $opts->{'PostHead'} if $opts->{'PostHead'};
    
  $html .= <<END;
</div><div id="content">
END
  return $html;
}
sub PageFooter
{
  return <<END;
<div style="clear: both"></div>
</div>
<div id="foot">
<div style="float: right">&nbsp;<span style="font-size: 12px"><a href="https://github.com/Hopper262/pid-whpress-com">Source code on GitHub</a></span></div>

<div style="text-transform: uppercase">
<a href="$MAP_URL/full20/">Maps</a>
&nbsp; &#x2022; &nbsp;
<a href="$ARCHIVE_URL/">Saved Games</a>
&nbsp; &#x2022; &nbsp;
<a href="$HOME_URL">Share</a>
&nbsp; &#x2022; &nbsp;
<a href="http://forums.bungie.org/story/">Forum</a>
&nbsp; &#x2022; &nbsp;
<a href="http://pid.bungie.org/">Story</a>
</div>

</div>
</body>
</html>
END
}

sub Format
{
  my ($str) = @_;
  $str = HTML::Entities::encode($str || '');
  $str =~ s/\x0d/<br>/g;
  return $str;
}


# end file
1;
